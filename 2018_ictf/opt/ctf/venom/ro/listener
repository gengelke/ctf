import socket
import ssl
import os


SCRIPTBOT_CERT = os.path.join(os.path.dirname(os.path.abspath(__file__)), "scriptbot-cert.pem")
OUR_CERT = os.path.join(os.path.dirname(os.path.abspath(__file__)), "client-cert.pem")
OUR_KEY = os.path.join(os.path.dirname(os.path.abspath(__file__)), "client-key.pem")
PLAN_FILE = os.path.join(os.path.dirname(os.path.abspath(__file__)), "../rw/plan")
PLAN_ID_FILE = os.path.join(os.path.dirname(os.path.abspath(__file__)), "../rw/plan_id")

"""
context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH, cafile=SCRIPTBOT_CERT)
context.load_cert_chain(certfile=OUR_CERT, keyfile=OUR_KEY)
context.verify_mode = ssl.CERT_REQUIRED
"""

bindsocket = socket.socket()
bindsocket.bind(("0.0.0.0", 49392))
bindsocket.listen(1)

while True:
    try:
        newsocket, fromaddr = bindsocket.accept()
        connstream = ssl.wrap_socket(newsocket, server_side=True,
                                     certfile=OUR_CERT, keyfile=OUR_KEY,
                                     ca_certs=SCRIPTBOT_CERT,
                                     cert_reqs=ssl.CERT_REQUIRED)
        try:
            data = ""
            while True:
                new = connstream.recv()
                if len(new) == 0:
                    break
                data += new
            plan_id, plan = data.split("\n")
            with open(PLAN_ID_FILE, "wb") as f:
                f.write(plan_id)
            with open(PLAN_FILE, "wb") as f:
                f.write(plan)
        finally:
            connstream.shutdown(socket.SHUT_RDWR)
            connstream.close()
    except (Exception, ssl.SSLError) as e:
        print e
